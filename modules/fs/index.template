/*/---------------------------------------------------------/*/
/*/ Craydent LLC node-v0.9.0                                /*/
/*/ Copyright 2011 (http://craydent.com/about)              /*/
/*/ Dual licensed under the MIT or GPL Version 2 licenses.  /*/
/*/ (http://craydent.com/license)                           /*/
/*/---------------------------------------------------------/*/
/*/---------------------------------------------------------/*/
///<reference path="../globalTypes/global.vars.ts" />
//#region imports
//@ts-ignore
import { $c, info } from '../private/__common';
import * as ILogModule from '../private/__logModule';
import * as IAccess from '../methods/access';
import * as IAppendFile from '../methods/appendFile';
import * as IChmod from '../methods/chmod';
import * as IChown from '../methods/chown';
import * as IClose from '../methods/close';
import * as ICopyFile from '../methods/copyFile';
import * as IFchmod from '../methods/fchmod';
import * as IFchown from '../methods/fchown';
import * as IFdatasync from '../methods/fdatasync';
import * as IFstat from '../methods/fstat';
import * as IFsync from '../methods/fsync';
import * as IFtruncate from '../methods/ftruncate';
import * as IFutimes from '../methods/futimes';
import * as ILchmod from '../methods/lchmod';
import * as ILchown from '../methods/lchown';
import * as ILink from '../methods/link';
import * as ILstat from '../methods/lstat';
import * as IMkdir from '../methods/mkdir';
import * as IMkdtemp from '../methods/mkdtemp';
import * as IOpen from '../methods/open';
import * as IRead from '../methods/read';
import * as IReaddir from '../methods/readdir';
import * as IReadFile from '../methods/readFile';
import * as IReadlink from '../methods/readlink';
import * as IRealpath from '../methods/realpath';
import * as IRename from '../methods/rename';
import * as IRmdir from '../methods/rmdir';
import * as IStat from '../methods/stat';
import * as ISymlink from '../methods/symlink';
import * as ITruncate from '../methods/truncate';
import * as IUnlink from '../methods/unlink';
import * as IUtimes from '../methods/utimes';
import * as IWrite from '../methods/write';
import * as IWriteFile from '../methods/writeFile';
import * as IPrototypes from './__prototypes';
//#endregion

declare global {
    interface Craydent {
        access: typeof IAccess.default;
        appendFile: typeof IAppendFile.default;
        chmod: typeof IChmod.default;
        chown: typeof IChown.default;
        close: typeof IClose.default;
        copyFile: typeof ICopyFile.default;
        fchmod: typeof IFchmod.default;
        fchown: typeof IFchown.default;
        fdatasync: typeof IFdatasync.default;
        fstat: typeof IFstat.default;
        fsync: typeof IFsync.default;
        ftruncate: typeof IFtruncate.default;
        futimes: typeof IFutimes.default;
        lchmod: typeof ILchmod.default;
        lchown: typeof ILchown.default;
        link: typeof ILink.default;
        lstat: typeof ILstat.default;
        mkdir: typeof IMkdir.default;
        mkdtemp: typeof IMkdtemp.default;
        open: typeof IOpen.default;
        read: typeof IRead.default;
        readdir: typeof IReaddir.default;
        readFile: typeof IReadFile.default;
        readlink: typeof IReadlink.default;
        realpath: typeof IRealpath.default;
        rename: typeof IRename.default;
        rmdir: typeof IRmdir.default;
        stat: typeof IStat.default;
        symlink: typeof ISymlink.default;
        truncate: typeof ITruncate.default;
        unlink: typeof IUnlink.default;
        utimes: typeof IUtimes.default;
        write: typeof IWrite.default;
        writeFile: typeof IWriteFile.default;
    }
    //#region global
    module NodeJS {
        interface Global {
            access: typeof IAccess.default;
            appendFile: typeof IAppendFile.default;
            chmod: typeof IChmod.default;
            chown: typeof IChown.default;
            close: typeof IClose.default;
            copyFile: typeof ICopyFile.default;
            fchmod: typeof IFchmod.default;
            fchown: typeof IFchown.default;
            fdatasync: typeof IFdatasync.default;
            fstat: typeof IFstat.default;
            fsync: typeof IFsync.default;
            ftruncate: typeof IFtruncate.default;
            futimes: typeof IFutimes.default;
            lchmod: typeof ILchmod.default;
            lchown: typeof ILchown.default;
            link: typeof ILink.default;
            lstat: typeof ILstat.default;
            mkdir: typeof IMkdir.default;
            mkdtemp: typeof IMkdtemp.default;
            open: typeof IOpen.default;
            read: typeof IRead.default;
            readdir: typeof IReaddir.default;
            readFile: typeof IReadFile.default;
            readlink: typeof IReadlink.default;
            realpath: typeof IRealpath.default;
            rename: typeof IRename.default;
            rmdir: typeof IRmdir.default;
            stat: typeof IStat.default;
            symlink: typeof ISymlink.default;
            truncate: typeof ITruncate.default;
            unlink: typeof IUnlink.default;
            utimes: typeof IUtimes.default;
            write: typeof IWrite.default;
            writeFile: typeof IWriteFile.default;
        }
    }

    var access: typeof IAccess.default;
    var appendFile: typeof IAppendFile.default;
    var chmod: typeof IChmod.default;
    var chown: typeof IChown.default;
    // const close: typeof IClose.default;
    const copyFile: typeof ICopyFile.default;
    var fchmod: typeof IFchmod.default;
    var fchown: typeof IFchown.default;
    var fdatasync: typeof IFdatasync.default;
    var fstat: typeof IFstat.default;
    var fsync: typeof IFsync.default;
    var ftruncate: typeof IFtruncate.default;
    var futimes: typeof IFutimes.default;
    var lchmod: typeof ILchmod.default;
    var lchown: typeof ILchown.default;
    var link: typeof ILink.default;
    var lstat: typeof ILstat.default;
    var mkdir: typeof IMkdir.default;
    var mkdtemp: typeof IMkdtemp.default;
    // const open: typeof IOpen.default;
    var read: typeof IRead.default;
    var readdir: typeof IReaddir.default;
    var readFile: typeof IReadFile.default;
    var readlink: typeof IReadlink.default;
    var realpath: typeof IRealpath.default;
    var rename: typeof IRename.default;
    var rmdir: typeof IRmdir.default;
    var stat: typeof IStat.default;
    var symlink: typeof ISymlink.default;
    var truncate: typeof ITruncate.default;
    var unlink: typeof IUnlink.default;
    var utimes: typeof IUtimes.default;
    var write: typeof IWrite.default;
    var writeFile: typeof IWriteFile.default;
    //#endregion global
}
if (!$c.MODULES_LOADED[info.name]) {
    const __logModule: typeof ILogModule.default = require('../private/__logModule').default;
    __logModule(info.name);
    const prototypes: typeof IPrototypes = require('./__prototypes');

    $c.access = $c.access || prototypes.access;
    $c.appendFile = $c.appendFile || prototypes.appendFile;
    $c.chmod = $c.chmod || prototypes.chmod;
    $c.chown = $c.chown || prototypes.chown;
    $c.close = $c.close || prototypes.close;
    $c.copyFile = $c.copyFile || prototypes.copyFile;
    $c.fchmod = $c.fchmod || prototypes.fchmod;
    $c.fchown = $c.fchown || prototypes.fchown;
    $c.fdatasync = $c.fdatasync || prototypes.fdatasync;
    $c.fstat = $c.fstat || prototypes.fstat;
    $c.fsync = $c.fsync || prototypes.fsync;
    $c.ftruncate = $c.ftruncate || prototypes.ftruncate;
    $c.futimes = $c.futimes || prototypes.futimes;
    $c.lchmod = $c.lchmod || prototypes.lchmod;
    $c.lchown = $c.lchown || prototypes.lchown;
    $c.link = $c.link || prototypes.link
    $c.lstat = $c.lstat || prototypes.lstat;
    $c.mkdir = $c.mkdir || prototypes.mkdir;
    $c.mkdtemp = $c.mkdtemp || prototypes.mkdtemp;
    $c.open = $c.open || prototypes.open;
    $c.read = $c.read || prototypes.read;
    $c.readdir = $c.readdir || prototypes.readdir;
    $c.readFile = $c.readFile || prototypes.readFile;
    $c.readlink = $c.readlink || prototypes.readlink;
    $c.realpath = $c.realpath || prototypes.realpath;
    $c.rename = $c.rename || prototypes.rename;
    $c.rmdir = $c.rmdir || prototypes.rmdir;
    $c.stat = $c.stat || prototypes.stat;
    $c.symlink = $c.symlink || prototypes.symlink;
    $c.truncate = $c.truncate || prototypes.truncate;
    $c.unlink = $c.unlink || prototypes.unlink;
    $c.utimes = $c.utimes || prototypes.utimes;
    $c.write = $c.write || prototypes.write;
    $c.writeFile = $c.writeFile || prototypes.writeFile;
    //#region global
    $c.globalize();
    //#endregion global
}
export default $c as Craydent;